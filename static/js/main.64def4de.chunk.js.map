{"version":3,"sources":["components/NavBar.js","components/MovieSwiper.js","components/HomeSlider.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","componentDidMount","prevScrollpos","window","pageYOffset","onscroll","currentScrollPos","document","getElementById","style","top","id","className","href","type","data-target","data-toggle","placeholder","required","value","Component","SwiperCore","use","Navigation","MovieSwiper","navigation","loop","breakpoints","320","slidesPerView","spaceBetween","480","768","1024","maxWidth","alt","src","Pagination","Autoplay","EffectFade","HomeSlider","pagination","clickable","autoplay","delay","effect","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.64def4de.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport '../styles/navbar-style.css';\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    componentDidMount = () => {\r\n\r\n        let prevScrollpos = window.pageYOffset;\r\n        window.onscroll = () => {\r\n            let currentScrollPos = window.pageYOffset;\r\n\r\n            //to show navbar on mobile on top\r\n            if (currentScrollPos === 0)\r\n                document.getElementById(\"navbar\").style.top = \"0\";\r\n\r\n            else if (prevScrollpos > currentScrollPos)\r\n                document.getElementById(\"navbar\").style.top = \"0\";\r\n\r\n            else\r\n                document.getElementById(\"navbar\").style.top = \"-800px\";\r\n\r\n            prevScrollpos = currentScrollPos;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav id=\"navbar\" className=\"navbar navbar-default navbar-expand-lg navbar-light\">\r\n                <div className=\"navbar-header\">\r\n                    <a className=\"navbar-brand\" href=\"/\">Movie<b>Mojo</b></a>\r\n                    <button type=\"button\" data-target=\"#navbarCollapse\" data-toggle=\"collapse\" className=\"navbar-toggle\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                        <span className=\"icon-bar\"></span>\r\n                        <span className=\"icon-bar\"></span>\r\n                        <span className=\"icon-bar\"></span>\r\n                    </button>\r\n                </div>\r\n                {/* Collection of nav links, forms, and other content for toggling  */}\r\n                <div id=\"navbarCollapse\" className=\"collapse navbar-collapse\">\r\n                    <ul className=\"nav navbar-nav navbar-right\">\r\n                        <li>\r\n                            <a data-toggle=\"dropdown\" className=\"dropdown-toggle\" href=\"/#\">Login</a>\r\n                            <ul className=\"dropdown-menu form-wrapper\">\r\n                                <li>\r\n                                    <p className=\"hint-text\">Sign in to your account</p>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Username\" required=\"required\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required=\"required\" />\r\n                                    </div>\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Login\" />\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"/#\" data-toggle=\"dropdown\" className=\"btn btn-primary dropdown-toggle get-started-btn mt-1 mb-1\">Sign up</a>\r\n                            <ul className=\"dropdown-menu form-wrapper\">\r\n                                <li>\r\n                                    <p className=\"hint-text\">Fill in this form to create your account!</p>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Username\" required=\"required\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required=\"required\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" required=\"required\" />\r\n                                    </div>\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Sign up\" />\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation } from 'swiper';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport '../styles/swiper-style.css';\r\n\r\n// install Swiper components\r\nSwiperCore.use([Navigation]);\r\n\r\n\r\nexport default class MovieSwiper extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"panel\">Recently added</h2>\r\n                <Swiper\r\n                    navigation\r\n                    loop={true}\r\n                    breakpoints={{\r\n                        320: {\r\n                            slidesPerView: 3,\r\n                            spaceBetween: 5\r\n                        },\r\n\r\n                        480: {\r\n                            slidesPerView: 3,\r\n                            spaceBetween: 5\r\n                        },\r\n\r\n                        768: {\r\n                            slidesPerView: 5,\r\n                            spaceBetween: 8\r\n                        },\r\n                        1024: {\r\n                            slidesPerView: 6,\r\n                            spaceBetween: 8\r\n                        }\r\n                    }}\r\n                >\r\n                    <SwiperSlide >\r\n                        <img style={{ maxWidth: '100%' }} alt='Space Betwen Us' src=\"https://www.focusoncode.com/uploads/demo/movies-trailer/images/3.jpg\" />\r\n                        <h3 className=\"hometitle\">Space Betwen Us</h3>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <img style={{ maxWidth: '100%' }} alt='' src=\"https://www.focusoncode.com/uploads/demo/movies-trailer/images/9.jpg\" />\r\n                        <h3 className=\"hometitle\">Space Betwen Us</h3>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <img style={{ maxWidth: '100%' }} alt='' src=\"https://www.focusoncode.com/uploads/demo/movies-trailer/images/4.jpg\" />\r\n                        <h3 className=\"hometitle\">Space Betwen Us</h3>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <img style={{ maxWidth: '100%' }} alt='' src=\"https://www.focusoncode.com/uploads/demo/movies-trailer/images/5.jpg\" />\r\n                        <h3 className=\"hometitle\">Space Betwen Us</h3>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <img style={{ maxWidth: '100%' }} alt='' src=\"https://www.focusoncode.com/uploads/demo/movies-trailer/images/7.jpg\" />\r\n                        <h3 className=\"hometitle\">Space Betwen Us</h3>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <img style={{ maxWidth: '100%' }} alt='' src=\"https://www.focusoncode.com/uploads/demo/movies-trailer/images/2.jpg\" />\r\n                        <h3 className=\"hometitle\">Space Betwen Us</h3>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <img style={{ maxWidth: '100%' }} alt='' src=\"https://www.focusoncode.com/uploads/demo/movies-trailer/images/8.jpg\" />\r\n                        <h3 className=\"hometitle\">Space Betwen Us</h3>\r\n                    </SwiperSlide>\r\n                </Swiper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport SwiperCore, { Pagination, Autoplay, EffectFade } from 'swiper';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\n\r\n// install Swiper components\r\nSwiperCore.use([Pagination, Autoplay, EffectFade]);\r\n\r\nexport default class HomeSlider extends Component {\r\n    render() {\r\n        return (\r\n            <Swiper\r\n                slidesPerView={1}\r\n                pagination={{ clickable: true }}\r\n                loop={true}\r\n                autoplay={{ delay: 4000 }}\r\n                effect='fade'\r\n            >\r\n                <SwiperSlide>\r\n                    <img className=\"home-swiper\" alt='Space Betwen Us' src=\"https://1.bp.blogspot.com/-hcfAOXtey6w/XerQ38Xw7aI/AAAAAAAASB0/TEwtRQO85TETd8Lxp0hdRQDdZYo4JtgdwCLcBGAsYHQ/w914-h514-p-k-no-nu/star-wars-the-rise-of-skywalker-movie-poster-uhdpaper.com-4K-7.554.jpg\" />\r\n                    <div className=\"caption\"></div>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img className=\"home-swiper\" alt='' src=\"https://www.focusoncode.com/uploads/demo/movies-trailer/images/slider/poster1.jpg\" />\r\n                    <div className=\"caption\"></div>\r\n                </SwiperSlide>\r\n                <SwiperSlide>\r\n                    <img className=\"home-swiper\" alt='' src=\"https://www.focusoncode.com/uploads/demo/movies-trailer/images/slider/poster2.jpg\" />\r\n                    <div className=\"caption\"></div>\r\n                </SwiperSlide>\r\n            </Swiper>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\n\nimport './App.css';\n\nimport NavBar from './components/NavBar.js';\nimport MovieSwiper from './components/MovieSwiper.js';\nimport HomeSlider from './components/HomeSlider.js';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <NavBar />\n      <HomeSlider />\n      <MovieSwiper />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}